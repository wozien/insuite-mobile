pipeline {
    agent any

    environment {
        // 注意根据需要修改配置
        branch_name = "prod"
        docker_host = "res.insuite.net"
        docker_file_path = "./docker/Dockerfile"
        docker_repository_name = "framework/insuite-mobile"
        docker_img_name = "${docker_host}/${docker_repository_name}"
    }

    stages {
        stage('Prepare') {
            steps {
                echo "1.Prepare Stage"
                git branch: branch_name, credentialsId: '3521e12e-8cea-48bd-9270-77a0ece39d33', url: 'ssh://git@117.50.34.190:7999/psc3/insuite-mobile.git'
                script {
                    build_tag = sh(returnStdout: true, script: 'git rev-parse --short HEAD').trim()
                    if (branch_name != 'master' && branch_name != null) {
                        build_tag = "${branch_name}-${build_tag}"
                    }
                }
                echo "docker-img-name-1 = ${docker_img_name}:${build_tag}"
                echo "docker-img-name-2 = ${docker_img_name}:${branch_name}"
            }
        }
        stage('Build') {
            steps {
                echo "2.Build Docker Image Stage"
				nodejs("node14"){
                    sh "npm -v"
                    sh "npm config set registry https://registry.npm.taobao.org"
                    sh "npm install -g yarn"
                    sh "yarn -v"
                    sh "yarn config set registry https://registry.npm.taobao.org"
                    sh "yarn"
                    sh "yarn build"
                }
                sh "docker build -f ${docker_file_path} -t ${docker_img_name}:${build_tag} ."
            }
        }
        stage('Push') {
            steps {
                echo "3.Deploy jar and Push Docker Image Stage"
                withCredentials([usernamePassword(credentialsId: 'harbor', passwordVariable: 'dockerPassword', usernameVariable: 'dockerUser')]) {
                    sh 'docker login -u $dockerUser -p $dockerPassword ${docker_host}'
                }
                sh "docker push $docker_img_name:$build_tag"
                sh "docker tag $docker_img_name:$build_tag $docker_img_name:$branch_name"
                sh "docker push $docker_img_name:$branch_name"

                // 删除镜像
                sh "docker rmi -f $docker_img_name:$build_tag $docker_img_name:$branch_name"
            }
        }
    }
}
